# bot.py

import logging
from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
)

from config import TELEGRAM_TOKEN
from db import init_db

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
init_db()
logging.basicConfig(
    format="%(asctime)s [%(levelname)s] %(name)s: %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start: —Ä–∏—Å—É–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Inline-–∫–Ω–æ–ø–∫–∞–º–∏.
    """
    keyboard = [
        [
            InlineKeyboardButton("üîç –ü–æ–∏—Å–∫", callback_data="menu_search"),
            InlineKeyboardButton("üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="menu_categories"),
        ],
        [
            InlineKeyboardButton("‚úâÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", callback_data="menu_feedback"),
            InlineKeyboardButton("üí¨ Discord-–∞–Ω–æ–Ω—Å—ã", callback_data="menu_discord"),
        ],
        [
            InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="menu_help"),
        ]
    ]
    markup = InlineKeyboardMarkup(keyboard)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª /start ‚Äî –ø—Ä–∏—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Inline-–∫–Ω–æ–ø–∫–∞–º–∏:
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=markup
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /help: –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–ø—Ä–∞–≤–∫—É –ø–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º.
    """
    text = (
        "/start ‚Äî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help ‚Äî –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n"
        "/search ‚Äî –ü–æ–∏—Å–∫ –ø–æ –ø–æ—Å—Ç–∞–º\n"
        "/categories ‚Äî –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π\n"
        "/feedback ‚Äî –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n"
        "/add_category ‚Äî –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–∞–¥–º–∏–Ω)\n"
        "/discord ‚Äî –ú–µ–Ω—é Discord-–∞–Ω–æ–Ω—Å–æ–≤\n"
        "/cancel ‚Äî –û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏\n"
    )
    # /help –º–æ–≥ –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –∏ –∫–∞–∫ –∫–æ–º–∞–Ω–¥–∞, –∏ –∫–∞–∫ callback_query
    if update.message:
        await update.message.reply_text(text)
    elif update.callback_query:
        await update.callback_query.message.reply_text(text)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –†–û–£–¢–ï–† INLINE-–ö–ù–û–ü–û–ö ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

async def main_menu_router(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –ª—é–±—É—é –∫–Ω–æ–ø–∫—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (callback_data="menu_*"),
    Telegram —à–ª—ë—Ç CallbackQuery. –ó–¥–µ—Å—å –º—ã ¬´–ª–æ–≤–∏–º¬ª menu_* –∏ –≤—ã–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π –º–æ–¥—É–ª—å
    –∏–∑ –ø–∞–ø–∫–∏ handlers/ –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±—É–∫–≤–∞–ª—å–Ω–æ–≥–æ "/search" –∏–ª–∏ "/categories" –≤ —á–∞—Ç.
    """
    q = update.callback_query
    await q.answer()  # —É–±–∏—Ä–∞–µ–º —á–∞—Å–∏–∫–∏-‚Äú–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è‚Äù

    data = q.data or ""
    # –ü–æ–ª—É—á–∞–µ–º ‚Äú–≥–æ–ª–æ–≤–Ω–æ–µ‚Äù —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –ª–µ–∂–∞–ª–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    chat_message = q.message

    # 1) –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ ‚Äúüîç –ü–æ–∏—Å–∫‚Äù ‚Üí –≤—ã–∑—ã–≤–∞—Ç—å search_start –∏–∑ handlers/search.py
    if data == "menu_search":
        from handlers.search import search_start

        raw = {
            "update_id": update.update_id,
            "message": chat_message.to_dict()
        }
        fake_update = Update.de_json(raw, context.bot)
        return await search_start(fake_update, context)

    # 2) –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ ‚ÄúüìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏‚Äù ‚Üí –≤—ã–∑—ã–≤–∞—Ç—å categories_command –∏–∑ handlers/categories.py
    if data == "menu_categories":
        from handlers.categories import categories_command

        raw = {
            "update_id": update.update_id,
            "message": chat_message.to_dict()
        }
        fake_update = Update.de_json(raw, context.bot)
        return await categories_command(fake_update, context)

    # 3) –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ ‚Äú‚úâÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å‚Äù ‚Üí –≤—ã–∑—ã–≤–∞—Ç—å feedback_start –∏–∑ handlers/feedback.py
    if data == "menu_feedback":
        from handlers.feedback import feedback_start

        raw = {
            "update_id": update.update_id,
            "message": chat_message.to_dict()
        }
        fake_update = Update.de_json(raw, context.bot)
        return await feedback_start(fake_update, context)

    # 4) –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ ‚Äúüí¨ Discord-–∞–Ω–æ–Ω—Å—ã‚Äù ‚Üí –≤—ã–∑—ã–≤–∞—Ç—å discord_menu –∏–∑ handlers/discord.py
    if data == "menu_discord":
        from handlers.discord import discord_menu

        raw = {
            "update_id": update.update_id,
            "message": chat_message.to_dict()
        }
        fake_update = Update.de_json(raw, context.bot)
        return await discord_menu(fake_update, context)

    # 5) –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ ‚Äú‚ÑπÔ∏è –ü–æ–º–æ—â—å‚Äù (callback_data="menu_help") ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Å–ø—Ä–∞–≤–∫—É
    if data == "menu_help":
        return await help_command(update, context)

    # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π: –µ—Å–ª–∏ data –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ /start
    return await start_command(update, context)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –í–°–ï–• –•–ï–ù–î–õ–ï–†–û–í ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    # 1) /start –∏ /help
    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CommandHandler("help", help_command))


    # 3) –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ handlers/
    from handlers.admin       import get_handlers as get_admin_handlers
    from handlers.categories  import get_handlers as get_categories_handlers
    from handlers.feedback    import get_handlers as get_feedback_handlers
    from handlers.search      import get_handlers as get_search_handlers
    from handlers.discord     import get_handlers as get_discord_handlers
    from handlers.utils       import get_handlers as get_utils_handlers

    # 3.1) –ê–¥–º–∏–Ω—Å–∫–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã
    for h in get_admin_handlers():
        app.add_handler(h)

    # 3.2) –•–µ–Ω–¥–ª–µ—Ä—ã ‚Äú–ö–∞—Ç–µ–≥–æ—Ä–∏–∏‚Äù (handlers/categories.py)
    for h in get_categories_handlers():
        app.add_handler(h)

    # 3.3) –•–µ–Ω–¥–ª–µ—Ä—ã ‚Äú–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å‚Äù (handlers/feedback.py)
    for h in get_feedback_handlers():
        app.add_handler(h)

    # 3.4) –•–µ–Ω–¥–ª–µ—Ä—ã ‚Äú–ü–æ–∏—Å–∫‚Äù (handlers/search.py)
    for h in get_search_handlers():
        app.add_handler(h)

    # 3.5) –•–µ–Ω–¥–ª–µ—Ä—ã ‚ÄúDiscord-–∞–Ω–æ–Ω—Å—ã‚Äù (handlers/discord.py)
    for h in get_discord_handlers():
        app.add_handler(h)

    # 2) CallbackQueryHandler –¥–ª—è –ª—é–±–æ–≥–æ callback_data, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å ‚Äúmenu_‚Äù
    app.add_handler(CallbackQueryHandler(main_menu_router, pattern=r"^menu_"))

    # 3.6) –£—Ç–∏–ª–∏—Ç—ã (handlers/utils.py), –Ω–∞–ø—Ä–∏–º–µ—Ä /cancel
    for h in get_utils_handlers():
        app.add_handler(h)

    # 4) –ó–∞–ø—É—Å–∫–∞–µ–º polling
    app.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == "__main__":
    main()
