# handlers/categories.py

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ConversationHandler,
    filters,
    ContextTypes,
)
from db import SessionLocal
from models import Category, Post
from handlers.utils import subscription_required
import re

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –Ω—É–∂–Ω–æ –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö ConversationHandler.END
CATEGORY_END = ConversationHandler.END

# –®–∞–±–ª–æ–Ω –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è chat –∏ message_id –∏–∑ —Å—Å—ã–ª–∫–∏ –≤–∏–¥–∞ "https://t.me/channel_name/123"
_CHAT_MSG_RE = re.compile(r"https?://t\.me/(?P<chat>[^/]+)/(?P<msg_id>\d+)")

def build_categories_menu(parent_id=None, offset=0, limit=5):
    """
    –°—Ç—Ä–æ–∏—Ç InlineKeyboardMarkup:
    - –ï—Å–ª–∏ —É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (parent_id) –µ—Å—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π.
    - –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤ (title‚Üílink) —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    """
    db = SessionLocal()

    # 1) –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–µ–∫—É—â–µ–π parent_id
    subs = (
        db.query(Category)
          .filter(Category.parent_id == parent_id)
          .order_by(Category.name)
          .all()
    )
    if subs:
        buttons = [
            [InlineKeyboardButton(f"üìÇ {c.name}", callback_data=f"cat:{c.id}:0")]
            for c in subs
        ]
        db.close()
        return InlineKeyboardMarkup(buttons)

    # 2) –ï—Å–ª–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    q = db.query(Post).filter(Post.category_id == parent_id, Post.archived == False).order_by(Post.id)
    total = q.count()
    posts = q.offset(offset).limit(limit).all()
    db.close()

    rows = []
    for p in posts:
        rows.append([InlineKeyboardButton(f"üîó {p.title}", callback_data=f"view_post:{p.id}")])

    # 3) –ù–∞–≤–∏–≥–∞—Ü–∏—è ¬´‚Äπ –ù–∞–∑–∞–¥ / –î–∞–ª–µ–µ ‚Ä∫¬ª –ø—Ä–∏ –±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø–æ—Å—Ç–æ–≤
    nav = []
    if offset > 0:
        nav.append(
            InlineKeyboardButton(
                "‚Äπ –ù–∞–∑–∞–¥",
                callback_data=f"cat:{parent_id}:{max(offset - limit, 0)}"
            )
        )
    if offset + limit < total:
        nav.append(
            InlineKeyboardButton(
                "–î–∞–ª–µ–µ ‚Ä∫",
                callback_data=f"cat:{parent_id}:{offset + limit}"
            )
        )
    if nav:
        rows.append(nav)

    # 4) –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ –ø–æ—Å—Ç–æ–≤, –Ω–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É ¬´–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π¬ª
    if not rows:
        rows = [[InlineKeyboardButton("üö´ –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π", callback_data="nopost:0")]]

    return InlineKeyboardMarkup(rows)


async def _forward_post(update: Update, context: ContextTypes.DEFAULT_TYPE, post: Post):
    """
    –ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ post.link —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É t.me/channel_name/msg_id, –¥–µ–ª–∞–µ—Ç forward_message.
    –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å fallback-—Ç–µ–∫—Å—Ç–æ–º.
    """
    qr = update.callback_query
    await qr.answer()

    user_chat_id = qr.message.chat.id

    # –ï—Å–ª–∏ —É –º–æ–¥–µ–ª–∏ Post –µ—Å—Ç—å –ø–æ–ª—è channel_username –∏ message_id, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –Ω–∞–ø—Ä—è–º—É—é.
    if hasattr(post, "channel_username") and hasattr(post, "message_id"):
        try:
            await context.bot.forward_message(
                chat_id=user_chat_id,
                from_chat_id=f"@{post.channel_username}",
                message_id=post.message_id
            )
            return
        except Exception:
            # –µ—Å–ª–∏ forward –Ω–µ –ø—Ä–æ—à—ë–ª ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –∫–∞–∫ fallback
            await qr.message.reply_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ—Ç —Å—Å—ã–ª–∫–∞: {post.link}")
            return

    # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Å—Å—ã–ª–∫—É post.link –≤–∏–¥–∞ "https://t.me/channel_name/123"
    m = _CHAT_MSG_RE.match(post.link)
    if m:
        channel = m.group("chat")
        msg_id = int(m.group("msg_id"))
        try:
            await context.bot.forward_message(
                chat_id=user_chat_id,
                from_chat_id=f"@{channel}",
                message_id=msg_id
            )
            return
        except Exception:
            await qr.message.reply_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ—Ç —Å—Å—ã–ª–∫–∞: {post.link}")
            return

    # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback
    await qr.message.reply_text(f"üîó <b>{post.title}</b>\n{post.link}", parse_mode="HTML")


@subscription_required
async def categories_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /categories.
    –í—ã–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ¬´–≤–µ—Ä—Ö–Ω–∏–µ¬ª –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (parent_id=None) –≤ –≤–∏–¥–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    """
    await update.message.reply_text(
        "üìÇ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=build_categories_menu(None)
    )


@subscription_required
async def add_category_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –®–∞–≥ 1/1: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≤–≤–æ–¥—è—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    """
    await update.message.reply_text(
        "üìù –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:",
        reply_markup=ReplyKeyboardRemove()
    )
    return CATEGORY_END  # –ò—Å–ø–æ–ª—å–∑—É–µ–º CATEGORY_END, –Ω–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ Conversation —Å—Ä–∞–∑—É –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è.


async def add_category_process(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å Category.
    """
    name = update.message.text.strip()
    if not name:
        return await update.message.reply_text("‚ùóÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ:")

    db = SessionLocal()
    db.add(Category(name=name))
    db.commit()
    db.close()

    await update.message.reply_text(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è ¬´{name}¬ª –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
    return CATEGORY_END


async def category_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ –∏–∑ build_categories_menu:
    - callback_data="cat:{category_id}:{offset}"
    - callback_data="view_post:{post_id}"
    - callback_data="nopost:0"
    """
    q = update.callback_query
    await q.answer()

    data = q.data or ""
    parts = data.split(":")

    # 1) –ù–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é¬ª –∏–ª–∏ ¬´–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ—Å—Ç–∞–º–∏¬ª
    if parts[0] == "cat" and len(parts) == 3:
        cat_id = int(parts[1])
        offset = int(parts[2])
        kb = build_categories_menu(parent_id=cat_id, offset=offset)
        await q.edit_message_text(
            f"üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (ID {cat_id}):",
            reply_markup=kb
        )
        return

    # 2) –ù–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç¬ª ‚Äî —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
    if parts[0] == "view_post" and len(parts) == 2:
        post_id = int(parts[1])
        db = SessionLocal()
        post = db.query(Post).filter(Post.id == post_id).first()
        db.close()
        if post:
            await _forward_post(update, context, post)
        else:
            await q.edit_message_text("‚ùå –ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # 3) –ù–∞–∂–∞–ª–∏ ¬´–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π¬ª –∏–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ
    if parts[0] == "nopost":
        await q.edit_message_text("üö´ –ó–¥–µ—Å—å –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π.")
        return

    # –ï—Å–ª–∏ data –Ω–µ –ø–æ–¥–æ—à–ª–æ –Ω–∏ –ø–æ–¥ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ, –Ω–µ –¥–µ–ª–∞–µ–º –Ω–∏—á–µ–≥–æ.


async def discord_cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π ¬´–æ—Ç–º–µ–Ω–∏—Ç—å¬ª –¥–ª—è ConversationHandler (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è).
    """
    # –ú–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—Ç–º–µ–Ω–µ
    if update.callback_query:
        q = update.callback_query
        await q.answer()
        await q.message.reply_text("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    else:
        await update.message.reply_text("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    context.user_data.clear()
    return CATEGORY_END


def get_handlers():
    """
    –≠–∫—Å–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞ handler‚Äô–æ–≤ –¥–ª—è bot.py:
    1) CommandHandler("/categories", categories_command)
    2) ConversationHandler –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    3) CallbackQueryHandler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –≤ –º–µ–Ω—é
    """
    return [
        # 1) –ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        CommandHandler("categories", categories_command),

        # 2) –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ ConversationHandler
        ConversationHandler(
            entry_points=[CommandHandler("add_category", add_category_start)],
            states={
                CATEGORY_END: [MessageHandler(filters.TEXT & ~filters.COMMAND, add_category_process)],
            },
            fallbacks=[CommandHandler("cancel", discord_cancel)],
            per_user=True,
            allow_reentry=True,
        ),

        # 3) –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –≤ –∏–Ω–ª–∞–π–Ω-–º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π/–ø–æ—Å—Ç–æ–≤
        CallbackQueryHandler(category_callback, pattern=r"^(cat|view_post|nopost):"),
    ]
